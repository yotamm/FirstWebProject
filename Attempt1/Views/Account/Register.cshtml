@model Attempt1.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@class = "form-horizontal", role = "form", @id="form"}))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr/>

    @*In MVC the input validation would be done in the Model (AccountViewModels.cs).
    But I was specifically asked to perform the validation in a seperate javascript file.
    Hence the script with the src attribute at the bottom (InputValidation.js).
    I left the model validation intact for server-side validation. *@
    
    <div id="ValidationSummary" style="display: @(ViewData.ModelState.Values.Any(x => x.Errors.Count >= 1)?"block":"none")">
        @*@Html.ValidationSummary("", new {@class = "alert alert-danger", role = "alert"})*@ <!-- server-side validation -->
        <div class="alert alert-danger"  role="alert">
            <ul id="errorList">
                <!-- show errors from the model -->
                @foreach (var error in ViewData.ModelState.Values.Where(E => E.Errors.Count > 0)
                    .SelectMany(E => E.Errors)
                    .Select(E => E.ErrorMessage))
                {
                    <li>@error</li>
                }
            </ul>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label", @id = "emailLabel"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new {@class = "form-control", @id = "Email"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new {@class = "col-md-2 control-label", @id = "usernameLabel" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new {@class = "form-control", @id = "UserName"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new {@class = "col-md-2 control-label", @id = "firstNameLabel" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control", @id = "FirstName"})
        </div>
    </div>
    <div class="form-group sheker">
        @Html.LabelFor(m => m.LastName, new {@class = "col-md-2 control-label", @id = "lastNameLabel"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new {@class = "form-control", @id = "LastName"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label", @id = "phoneLabel" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", @id = "PhoneNumber"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label", @id = "passwordLabel" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new {@class = "form-control", @id = "Password"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-md-2 control-label", @id = "confirmPasswordLabel" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", @id = "ConfirmPassword"})
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="submit" class="btn btn-default" value="Register" onclick="validationDisplay()"/>
        </div>
    </div>
}

<script src="~/Scripts/InputValidation.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
